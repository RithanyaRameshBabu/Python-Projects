# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FtG5eIjhVKmmu8f4lfmv4Kg33lXciGkA
"""

# -------------------------------
# IMPORT LIBRARY
# We need 'choice' to pick a random word and category
# -------------------------------
from random import choice

# -------------------------------
# GAME FUNCTION
# All the logic of one round of Hangman is inside this function
# -------------------------------
def run_game():
    # -------------------------------
    # WORDS GROUPED BY CATEGORY
    # Each category has a list of words
    # -------------------------------
    categories = {
        "River": ["nile", "ganga", "amazon", "danube", "thames"],
        "Country": ["india", "brazil", "canada", "japan", "france"],
        "Game": ["cricket", "football", "chess", "tennis", "hockey"],
        "Personality": ["gandhi", "einstein", "newton", "tesla", "shakespeare"],
        "City": ["paris", "london", "tokyo", "dubai", "sydney"]
    }

    # -------------------------------
    # PICK RANDOM CATEGORY AND WORD
    # We select one category and one word from that category
    # -------------------------------
    category = choice(list(categories.keys()))
    word = choice(categories[category])

    # -------------------------------
    # GREETING AND HINT
    # Ask for player's name and show the category as a hint
    # -------------------------------
    username = input("What is your name? ")
    print(f"Welcome to Hangman, {username}!")
    print(f"üí° Hint: The word is about **{category}**")

    # -------------------------------
    # SETUP VARIABLES
    # guessed: letters guessed so far
    # tries: number of wrong attempts allowed
    # -------------------------------
    guessed = ""
    tries = 6

    # -------------------------------
    # MAIN GAME LOOP
    # Loop until player runs out of tries
    # -------------------------------
    while tries > 0:
        blanks = 0
        print("\nWord: ", end="")

        # -------------------------------
        # SHOW GUESSED LETTERS OR BLANKS
        # Print letters if guessed, else underscores
        # -------------------------------
        for char in word:
            if char in guessed:
                print(char, end=" ")
            else:
                print("_", end=" ")
                blanks += 1

        print()  # new line for readability

        # -------------------------------
        # CHECK IF PLAYER HAS WON
        # If no blanks remain, the word is fully guessed
        # -------------------------------
        if blanks == 0:
            print(f"üéâ You got it! The word was: {word.upper()}")
            break

        # -------------------------------
        # GET PLAYER GUESS
        # Can be a single letter or the full word
        # -------------------------------
        guess = input("Enter a letter or guess the full word: ").lower()

        # -------------------------------
        # ALREADY GUESSED LETTER CHECK
        # Prevent repeated guesses
        # -------------------------------
        if guess in guessed:
            print(f"You already used '{guess}', try another letter.")
            continue

        # -------------------------------
        # FULL WORD GUESS
        # If guess length matches word, check if correct
        # -------------------------------
        if len(guess) == len(word):
            if guess == word:
                print(f"üéâ You guessed the whole word! It was: {word.upper()}")
                break
            else:
                tries -= 1
                print(f"‚ùå Wrong word! {tries} tries remaining.")

        # -------------------------------
        # SINGLE LETTER GUESS
        # Add to guessed letters and reduce tries if wrong
        # -------------------------------
        elif len(guess) == 1:
            guessed += guess
            if guess not in word:
                tries -= 1
                print(f"‚ùå Wrong! {tries} tries remaining.")

        # -------------------------------
        # INVALID INPUT
        # Player must enter one letter or the full word
        # -------------------------------
        else:
            print("Please enter one letter OR try guessing the full word.")

        # -------------------------------
        # CHECK IF PLAYER LOST
        # If tries reach zero, reveal the word
        # -------------------------------
        if tries == 0:
            print("No more tries remaining. You lose üò¢")
            print("The word was:", word.upper())

# -------------------------------
# MAIN FUNCTION
# Handles play again option
# -------------------------------
def main():
    while True:
        run_game()
        play_again = input("\nDo you want to play again? (y/n): ").lower()
        if play_again != "y":
            print("Thanks for playing! Goodbye üëã")
            break

# -------------------------------
# RUN THE GAME
# Only runs if this file is executed directly
# -------------------------------
if __name__ == "__main__":
    main()